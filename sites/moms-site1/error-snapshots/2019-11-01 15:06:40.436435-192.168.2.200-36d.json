{
 "etype": "OperationalError",
 "evalue": "OperationalError(2003, \"Can't connect to MySQL server on u'localhost' ([Errno 111] Connection refused)\")",
 "exception": {
  "args": "(2003, \"Can't connect to MySQL server on u'localhost' ([Errno 111] Connection refused)\")",
  "message": "''",
  "original_exception": "error(111, 'Connection refused')",
  "traceback": "'Traceback (most recent call last):\\n  File \"/home... raise err\\nerror: [Errno 111] Connection refused\\n'"
 },
 "frames": [
  {
   "call": "(request=<Request 'http://erp.mybusiness.com/favicon.ico' [GET]>)",
   "dump": {
    "global init_request": "<function init_request>",
    "request": "<Request 'http://erp.mybusiness.com/favicon.ico' [GET]>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "50": "\t\trollback = True",
    "51": "",
    "52": "\t\tinit_request(request)",
    "53": "",
    "54": "\t\tfrappe.recorder.record()"
   },
   "lnum": 52
  },
  {
   "call": "(request=<Request 'http://erp.mybusiness.com/favicon.ico' [GET]>)",
   "dump": {
    "frappe. auth": "<module 'frappe.auth' from '/home/umoms/moms-bench/apps/frappe/frappe/auth.pyc'>",
    "frappe. local": "<werkzeug.local.Local object>",
    "frappe.auth. HTTPRequest": "<class frappe.auth.HTTPRequest>",
    "frappe.local.http_request": "undefined",
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/app.py",
   "func": "init_request",
   "lines": {
    "115": "\tmake_form_dict(request)",
    "116": "",
    "117": "\tfrappe.local.http_request = frappe.auth.HTTPRequest()",
    "118": "",
    "119": "def make_form_dict(request):"
   },
   "lnum": 117
  },
  {
   "call": "(self=<frappe.auth.HTTPRequest instance>)",
   "dump": {
    "self": "<frappe.auth.HTTPRequest instance>",
    "self. set_lang": "<bound method HTTPRequest.set_lang of <frappe.auth.HTTPRequest instance>>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/auth.py",
   "func": "__init__",
   "lines": {
    "40": "",
    "41": "\t\t# language",
    "42": "\t\tself.set_lang()",
    "43": "",
    "44": "\t\t# load cookies"
   },
   "lnum": 42
  },
  {
   "call": "(self=<frappe.auth.HTTPRequest instance>)",
   "dump": {
    "frappe. local": "<werkzeug.local.Local object>",
    "frappe.local. lang": "u'en'",
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>",
    "guess_language": "<function guess_language>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/auth.py",
   "func": "set_lang",
   "lines": {
    "84": "\tdef set_lang(self):",
    "85": "\t\tfrom frappe.translate import guess_language",
    "86": "\t\tfrappe.local.lang = guess_language()",
    "87": "",
    "88": "\tdef get_db_name(self):"
   },
   "lnum": 86
  },
  {
   "call": "(lang_list=None)",
   "dump": {
    "global get_all_languages": "<function get_all_languages>",
    "lang_list": "None"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/translate.py",
   "func": "guess_language",
   "lines": {
    "27": "\tguess = None",
    "28": "\tif not lang_list:",
    "29": "\t\tlang_list = get_all_languages() or []",
    "30": "",
    "31": "\tfor l in lang_codes:"
   },
   "lnum": 29
  },
  {
   "call": "()",
   "dump": {
    ").get_value": "undefined",
    "_get": "<function _get>",
    "frappe. cache": "<function cache>",
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/translate.py",
   "func": "get_all_languages",
   "lines": {
    "83": "\t\t\tfrappe.connect()",
    "84": "\t\treturn frappe.db.sql_list('select name from tabLanguage')",
    "85": "\treturn frappe.cache().get_value('languages', _get)",
    "86": "",
    "87": "def get_lang_dict():"
   },
   "lnum": 85
  },
  {
   "call": "(self=RedisWrapper<ConnectionPool<Connection<host=localhost,port=13000,db=0>>>, key='ce8f7d83a4ad22b8|languages', generator=<function _get>, user=None, expires=False)",
   "dump": {
    "generator": "<function _get>",
    "val": "None"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/utils/redis_wrapper.py",
   "func": "get_value",
   "lines": {
    "77": "\t\t\tif not expires:",
    "78": "\t\t\t\tif val is None and generator:",
    "79": "\t\t\t\t\tval = generator()",
    "80": "\t\t\t\t\tself.set_value(original_key, val, user=user)",
    "81": ""
   },
   "lnum": 79
  },
  {
   "call": "()",
   "dump": {
    "frappe. db": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "frappe.db. sql_list": "<bound method MariaDBDatabase.sql_list of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/translate.py",
   "func": "_get",
   "lines": {
    "82": "\t\tif not frappe.db:",
    "83": "\t\t\tfrappe.connect()",
    "84": "\t\treturn frappe.db.sql_list('select name from tabLanguage')",
    "85": "\treturn frappe.cache().get_value('languages', _get)",
    "86": ""
   },
   "lnum": 84
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, query=u'select name from tabLanguage', values=(), debug=False)",
   "dump": {
    "debug": "False",
    "query": "u'select name from tabLanguage'",
    "r": "undefined",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. sql": "<bound method MariaDBDatabase.sql of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "values": "()"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/database/database.py",
   "func": "sql_list",
   "lines": {
    "233": "\t\t\tdoctypes = frappe.db.sql_list(\"select name from DocType\")",
    "234": "\t\t\"\"\"",
    "235": "\t\treturn [r[0] for r in self.sql(query, values, debug=debug)]",
    "236": "",
    "237": "\tdef sql_ddl(self, query, values=(), debug=False):"
   },
   "lnum": 235
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, query=u'select name from tabLanguage', values=(), as_dict=0, as_list=0, formatted=0, debug=False, ignore_ddl=0, as_utf8=0, auto_commit=0, update=None, explain=False)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. connect": "<bound method MariaDBDatabase.connect of <frappe.database.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/database/database.py",
   "func": "sql",
   "lines": {
    "120": "",
    "121": "\t\tif not self._conn:",
    "122": "\t\t\tself.connect()",
    "123": "",
    "124": "\t\t# in transaction validations"
   },
   "lnum": 122
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _conn": "None",
    "self. get_connection": "<bound method MariaDBDatabase.get_connection of ...atabase.mariadb.database.MariaDBDatabase object>>"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/database/database.py",
   "func": "connect",
   "lines": {
    "73": "\t\t\"\"\"Connects to a database as set in `site_config.json`.\"\"\"",
    "74": "\t\tself.cur_db_name = self.user",
    "75": "\t\tself._conn = self.get_connection()",
    "76": "\t\tself._cursor = self._conn.cursor()",
    "77": "\t\tfrappe.local.rollback_observers = []"
   },
   "lnum": 75
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>)",
   "dump": {
    "frappe. conf": "{u'gunicorn_workers': 4, u'maintenance_mode': 0,...0, u'redis_socketio': u'redis://localhost:12000'}",
    "frappe.conf. local_infile": "None",
    "global frappe": "<module 'frappe' from '/home/umoms/moms-bench/apps/frappe/frappe/__init__.pyc'>",
    "local_infile": "undefined"
   },
   "file": "/home/umoms/moms-bench/apps/frappe/frappe/database/mariadb/database.py",
   "func": "get_connection",
   "lines": {
    "88": "\t\t\tconn = pymysql.connect(self.host, self.user or '', self.password or '',",
    "89": "\t\t\t\tport=self.port, charset='utf8mb4', use_unicode = True, conv = conversions,",
    "90": "\t\t\t\tlocal_infile = frappe.conf.local_infile)",
    "91": "",
    "92": "\t\t# MYSQL_OPTION_MULTI_STATEMENTS_OFF = 1"
   },
   "lnum": 90
  },
  {
   "call": "(*args=(u'localhost', u'ce8f7d83a4ad22b8', u'OYOfYTAUpjj77PWu'), **kwargs={'charset': u'utf8mb4', 'conv': {0: <class 'decimal.Decimal'>, 1: <type 'int'>, 2: <type 'int'>, 3: <type 'int'>, 4: <type 'float'>, 5: <type 'float'>, 7: <function convert_mysql_timestamp>, 8: <type 'int'>, 9: <type 'int'>, 10: <function convert_date>, ...}, 'local_infile': None, 'port': u'', 'use_unicode': True})",
   "dump": {
    "Connection": "<class 'pymysql.connections.Connection'>",
    "args": "(u'localhost', u'ce8f7d83a4ad22b8', u'OYOfYTAUpjj77PWu')",
    "kwargs": "{'charset': u'utf8mb4', 'conv': {0: <class 'decimal.Decimal'>, 1: <type 'int'>, 2: <type 'int'>, 3: <type 'int'>, 4: <type 'float'>, 5: <type 'float'>, 7: <function convert_mysql_timestamp>, 8: <type 'int'>, 9: <type 'int'>, 10: <function convert_date>, ...}, 'local_infile': None, 'port': u'', 'use_unicode': True}"
   },
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/__init__.py",
   "func": "Connect",
   "lines": {
    "92": "    \"\"\"",
    "93": "    from .connections import Connection",
    "94": "    return Connection(*args, **kwargs)",
    "95": "",
    "96": "from . import connections as _orig_conn"
   },
   "lnum": 94
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, host=u'localhost', user=u'ce8f7d83a4ad22b8', password=u'OYOfYTAUpjj77PWu', database=None, port=u'', unix_socket=None, charset=u'utf8mb4', sql_mode=None, read_default_file=None, conv={0: <class 'decimal.Decimal'>, 1: <type 'int'>, 2: <type 'int'>, 3: <type 'int'>, 4: <type 'float'>, 5: <type 'float'>, 7: <function convert_mysql_timestamp>, 8: <type 'int'>, 9: <type 'int'>, 10: <function convert_date>, ...}, use_unicode=True, client_flag=3842565, cursorclass=<class 'pymysql.cursors.Cursor'>, init_command=None, connect_timeout=10, ssl=None, read_default_group=None, compress=None, named_pipe=None, autocommit=False, db=None, passwd=None, local_infile=None, max_allowed_packet=16777216, defer_connect=False, auth_plugin_map=None, read_timeout=None, write_timeout=None, bind_address=None, binary_prefix=False, program_name=None, server_public_key=None)",
   "dump": {
    "self": "<pymysql.connections.Connection object>",
    "self. connect": "<bound method Connection.connect of <pymysql.connections.Connection object>>"
   },
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py",
   "func": "__init__",
   "lines": {
    "323": "            self._sock = None",
    "324": "        else:",
    "325": "            self.connect()",
    "326": "",
    "327": "    def _create_ssl_ctx(self, sslp):"
   },
   "lnum": 325
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, sock=None)",
   "dump": {
    "exc": "OperationalError(2003, \"Can't connect to MySQL s...n u'localhost' ([Errno 111] Connection refused)\")"
   },
   "file": "/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py",
   "func": "connect",
   "lines": {
    "628": "                exc.traceback = traceback.format_exc()",
    "629": "                if DEBUG: print(exc.traceback)",
    "630": "                raise exc",
    "631": "",
    "632": "            # If e is neither DatabaseError or IOError, It's a bug."
   },
   "lnum": 630
  }
 ],
 "locals": {
  "e": "error(111, 'Connection refused')",
  "exc": "OperationalError(2003, \"Can't connect to MySQL s...n u'localhost' ([Errno 111] Connection refused)\")",
  "kwargs": "{}",
  "self": "<pymysql.connections.Connection object>",
  "sock": "None"
 },
 "pyver": "Python 2.7.15rc1: /home/umoms/moms-bench/env/bin/python (prefix: /home/umoms/moms-bench/env)",
 "timestamp": "2019-11-01 15:06:40.436723",
 "traceback": "Traceback (most recent call last):\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/app.py\", line 52, in application\n    init_request(request)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/app.py\", line 117, in init_request\n    frappe.local.http_request = frappe.auth.HTTPRequest()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/auth.py\", line 42, in __init__\n    self.set_lang()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/auth.py\", line 86, in set_lang\n    frappe.local.lang = guess_language()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/translate.py\", line 29, in guess_language\n    lang_list = get_all_languages() or []\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/translate.py\", line 85, in get_all_languages\n    return frappe.cache().get_value('languages', _get)\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/utils/redis_wrapper.py\", line 79, in get_value\n    val = generator()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/translate.py\", line 84, in _get\n    return frappe.db.sql_list('select name from tabLanguage')\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/database/database.py\", line 235, in sql_list\n    return [r[0] for r in self.sql(query, values, debug=debug)]\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/database/database.py\", line 122, in sql\n    self.connect()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/database/database.py\", line 75, in connect\n    self._conn = self.get_connection()\n  File \"/home/umoms/moms-bench/apps/frappe/frappe/database/mariadb/database.py\", line 90, in get_connection\n    local_infile = frappe.conf.local_infile)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/__init__.py\", line 94, in Connect\n    return Connection(*args, **kwargs)\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py\", line 325, in __init__\n    self.connect()\n  File \"/home/umoms/moms-bench/env/local/lib/python2.7/site-packages/pymysql/connections.py\", line 630, in connect\n    raise exc\nOperationalError: (2003, \"Can't connect to MySQL server on u'localhost' ([Errno 111] Connection refused)\")\n"
}